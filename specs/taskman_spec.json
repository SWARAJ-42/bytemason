{
  "name": "TaskMan",
  "description": "A task management application enabling users to organize, share, and collaborate on tasks with real-time updates and notification support.",
  "features": [
    "User Authentication and Authorization",
    "Create, Read, Update, Delete (CRUD) operations for tasks",
    "Real-time updates on task list changes",
    "User profile management",
    "Task categorization and prioritization",
    "Collaborative task sharing with other users",
    "Task due date reminders and notifications"
  ],
  "structure": {
    "pages": [
      {
        "path": "/",
        "description": "Landing page for the application offering an overview or promotional content.",
        "api_routes": [],
        "components": [
          "Header",
          "Footer",
          "LandingContent"
        ]
      },
      {
        "path": "/auth/login",
        "description": "User login page allowing existing users to authenticate.",
        "api_routes": [
          "/api/auth/login"
        ],
        "components": [
          "LoginForm"
        ]
      },
      {
        "path": "/auth/register",
        "description": "User registration page for creating new accounts.",
        "api_routes": [
          "/api/auth/register"
        ],
        "components": [
          "RegistrationForm"
        ]
      },
      {
        "path": "/dashboard",
        "description": "User dashboard displaying task lists and recent activity.",
        "api_routes": [
          "/api/tasks",
          "/api/notifications"
        ],
        "components": [
          "TaskList",
          "NotificationList",
          "Header",
          "Footer"
        ]
      },
      {
        "path": "/profile",
        "description": "User profile management for updating personal information.",
        "api_routes": [
          "/api/user/profile"
        ],
        "components": [
          "ProfileForm",
          "Header",
          "Footer"
        ]
      },
      {
        "path": "/tasks/create",
        "description": "Page for creating a new task with options for categorization and setting priorities.",
        "api_routes": [
          "/api/tasks/create"
        ],
        "components": [
          "TaskForm",
          "Header",
          "Footer"
        ]
      },
      {
        "path": "/tasks/:taskId",
        "description": "Task detail page where users can view, edit, or delete a specific task.",
        "api_routes": [
          "/api/tasks/:taskId"
        ],
        "components": [
          "TaskDetail",
          "Header",
          "Footer"
        ]
      }
    ],
    "components": [
      {
        "name": "Header",
        "description": "Top navigation bar with links to primary sections.",
        "is_client": false
      },
      {
        "name": "Footer",
        "description": "Bottom of the page with informational links and contact info.",
        "is_client": false
      },
      {
        "name": "LandingContent",
        "description": "Main content for the landing page.",
        "is_client": false
      },
      {
        "name": "LoginForm",
        "description": "Form for user login.",
        "is_client": true
      },
      {
        "name": "RegistrationForm",
        "description": "Form for user registration.",
        "is_client": true
      },
      {
        "name": "TaskList",
        "description": "Displays a list of tasks with real-time updates.",
        "is_client": true
      },
      {
        "name": "NotificationList",
        "description": "List of recent notifications and reminders.",
        "is_client": true
      },
      {
        "name": "ProfileForm",
        "description": "Form for updating user profile details.",
        "is_client": true
      },
      {
        "name": "TaskForm",
        "description": "Form to create or edit tasks including settings for categorization and prioritization.",
        "is_client": true
      },
      {
        "name": "TaskDetail",
        "description": "Displays detailed information for a specific task with options to edit or delete.",
        "is_client": true
      }
    ],
    "api_routes": [
      {
        "path": "/api/auth/login",
        "method": "POST",
        "description": "Authenticate user and initiate session.",
        "query": "Authenticate user based on username and password."
      },
      {
        "path": "/api/auth/register",
        "method": "POST",
        "description": "Register a new user account.",
        "query": "Insert a new user into the users table."
      },
      {
        "path": "/api/tasks",
        "method": "GET",
        "description": "Fetch a list of tasks for the authenticated user with real-time updates.",
        "query": "Select tasks where user_id = current_user_id."
      },
      {
        "path": "/api/tasks/create",
        "method": "POST",
        "description": "Create a new task with detailed fields including category and priority.",
        "query": "Insert new task into tasks table."
      },
      {
        "path": "/api/tasks/:taskId",
        "method": "GET",
        "description": "Fetch details of the specified task.",
        "query": "Select * from tasks where id = :taskId."
      },
      {
        "path": "/api/tasks/:taskId",
        "method": "PUT",
        "description": "Update an existing task's details.",
        "query": "Update tasks set ... where id = :taskId."
      },
      {
        "path": "/api/tasks/:taskId",
        "method": "DELETE",
        "description": "Delete a specified task.",
        "query": "Delete from tasks where id = :taskId."
      },
      {
        "path": "/api/notifications",
        "method": "GET",
        "description": "Retrieve notifications for the current user.",
        "query": "Select from notifications where user_id = current_user_id."
      },
      {
        "path": "/api/user/profile",
        "method": "GET",
        "description": "Fetch authenticated user's profile information.",
        "query": "Select * from users where id = current_user_id."
      },
      {
        "path": "/api/user/profile",
        "method": "PUT",
        "description": "Update authenticated user's profile information.",
        "query": "Update users set ... where id = current_user_id."
      }
    ],
    "database": [
      {
        "name": "users",
        "schema": "CREATE TABLE users (id SERIAL PRIMARY KEY, username VARCHAR(100) UNIQUE NOT NULL, password VARCHAR(100) NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, profile JSONB);"
      },
      {
        "name": "tasks",
        "schema": "CREATE TABLE tasks (id SERIAL PRIMARY KEY, user_id INTEGER REFERENCES users(id) ON DELETE CASCADE, title VARCHAR(255) NOT NULL, description TEXT, due_date DATE, category VARCHAR(50), priority SMALLINT, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP);"
      },
      {
        "name": "task_collaborators",
        "schema": "CREATE TABLE task_collaborators (task_id INTEGER REFERENCES tasks(id) ON DELETE CASCADE, user_id INTEGER REFERENCES users(id) ON DELETE CASCADE, PRIMARY KEY (task_id, user_id));"
      },
      {
        "name": "notifications",
        "schema": "CREATE TABLE notifications (id SERIAL PRIMARY KEY, user_id INTEGER REFERENCES users(id) ON DELETE CASCADE, message TEXT NOT NULL, type VARCHAR(50), created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, read BOOLEAN DEFAULT FALSE);"
      }
    ]
  }
}