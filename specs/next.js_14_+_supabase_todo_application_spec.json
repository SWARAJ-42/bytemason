{
  "name": "Next.js 14 + Supabase Todo Application",
  "description": "A simple task management application leveraging Next.js 14 and Supabase to provide a streamlined, real-time, authenticated experience for managing to-do lists.",
  "features": [
    "User authentication to log in/out",
    "CRUD operations for to-do items",
    "Real-time updates for list changes",
    "User-specific data storage and access",
    "Basic analytics/dashboard for task completion",
    "Search/filter functionality for tasks",
    "User profile management"
  ],
  "structure": {
    "pages": [
      {
        "path": "/",
        "description": "Landing page with a welcome message and login/register options.",
        "api_routes": [],
        "components": [
          "Header",
          "Footer",
          "AuthForm"
        ]
      },
      {
        "path": "/dashboard",
        "description": "Main dashboard where users can view, add, edit, and delete tasks. Displays task completion analytics.",
        "api_routes": [
          "/api/tasks",
          "/api/analytics"
        ],
        "components": [
          "Header",
          "TaskList",
          "TaskItem",
          "AddTaskForm",
          "AnalyticsPanel",
          "Footer"
        ]
      },
      {
        "path": "/profile",
        "description": "Allows users to view and edit their profile information.",
        "api_routes": [
          "/api/user"
        ],
        "components": [
          "Header",
          "ProfileForm",
          "Footer"
        ]
      }
    ],
    "components": [
      {
        "name": "Header",
        "description": "Navigation header with links to dashboard and profile pages.",
        "is_client": true
      },
      {
        "name": "Footer",
        "description": "Footer of the application with copyright information.",
        "is_client": false
      },
      {
        "name": "AuthForm",
        "description": "Displays a login or register form.",
        "is_client": true
      },
      {
        "name": "TaskList",
        "description": "Displays a list of tasks for the user.",
        "is_client": true
      },
      {
        "name": "TaskItem",
        "description": "Displays individual task with options to edit or delete.",
        "is_client": true
      },
      {
        "name": "AddTaskForm",
        "description": "Form to add new tasks to the list.",
        "is_client": true
      },
      {
        "name": "AnalyticsPanel",
        "description": "Displays basic task completion stats for the user.",
        "is_client": true
      },
      {
        "name": "ProfileForm",
        "description": "Form to edit user's profile information.",
        "is_client": true
      }
    ],
    "api_routes": [
      {
        "path": "/api/auth/login",
        "method": "POST",
        "description": "Authenticates user and returns a session token.",
        "query": "auth.login()"
      },
      {
        "path": "/api/auth/logout",
        "method": "POST",
        "description": "Logs out the user by invalidating the session.",
        "query": "auth.logout()"
      },
      {
        "path": "/api/tasks",
        "method": "GET",
        "description": "Fetches user's tasks.",
        "query": "supabase.from('tasks').select('*').eq('user_id', userId)"
      },
      {
        "path": "/api/tasks",
        "method": "POST",
        "description": "Adds a new task for the user.",
        "query": "supabase.from('tasks').insert({title, description, user_id: userId})"
      },
      {
        "path": "/api/tasks",
        "method": "PUT",
        "description": "Updates an existing task.",
        "query": "supabase.from('tasks').update({title, description, completed}).match({id, user_id: userId})"
      },
      {
        "path": "/api/tasks",
        "method": "DELETE",
        "description": "Deletes a task by ID.",
        "query": "supabase.from('tasks').delete().match({id, user_id: userId})"
      },
      {
        "path": "/api/user",
        "method": "GET",
        "description": "Retrieves user profile details.",
        "query": "supabase.from('users').select('*').eq('id', userId)"
      },
      {
        "path": "/api/user",
        "method": "PUT",
        "description": "Updates user's profile information.",
        "query": "supabase.from('users').update({name, email}).match({id: userId})"
      },
      {
        "path": "/api/analytics",
        "method": "GET",
        "description": "Fetches basic task analytics for the user.",
        "query": "supabase.rpc('get_task_completion_stats', {user_id: userId})"
      }
    ],
    "database": [
      {
        "name": "users",
        "schema": "CREATE TABLE users (\n  id uuid PRIMARY KEY,\n  email text UNIQUE NOT NULL,\n  password text NOT NULL,\n  name text\n);"
      },
      {
        "name": "tasks",
        "schema": "CREATE TABLE tasks (\n  id serial PRIMARY KEY,\n  user_id uuid REFERENCES users(id),\n  title text NOT NULL,\n  description text,\n  completed boolean DEFAULT FALSE,\n  created_at timestamp DEFAULT current_timestamp\n);"
      }
    ]
  }
}