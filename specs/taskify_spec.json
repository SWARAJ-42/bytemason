{
  "name": "Taskify",
  "description": "A Next.js 14 application powered by Supabase for managing personal to-do lists with collaborative features.",
  "features": [
    "User authentication for secure access to personal to-do lists",
    "CRUD operations on to-do items (Create, Read, Update, Delete)",
    "Categories or tagging for organizing tasks",
    "Due dates and reminders for tasks",
    "User profiles to manage individual settings",
    "Real-time updates and collaboration on to-do lists"
  ],
  "structure": {
    "pages": [
      {
        "path": "/",
        "description": "Landing page with an overview of features and login/signup options.",
        "api_routes": [],
        "components": [
          "LandingHeader",
          "AuthForm"
        ]
      },
      {
        "path": "/dashboard",
        "description": "Primary interface for managing and viewing to-do lists.",
        "api_routes": [
          "/api/todo",
          "/api/categories"
        ],
        "components": [
          "TaskList",
          "AddTaskForm",
          "CategoryFilter",
          "UserProfileMenu"
        ]
      },
      {
        "path": "/profile",
        "description": "User profile management page.",
        "api_routes": [
          "/api/user"
        ],
        "components": [
          "UserProfileForm",
          "NotificationSettings"
        ]
      }
    ],
    "components": [
      {
        "name": "LandingHeader",
        "description": "Header component for the landing page.",
        "is_client": false
      },
      {
        "name": "AuthForm",
        "description": "Authentication form for user login and registration.",
        "is_client": true
      },
      {
        "name": "TaskList",
        "description": "Displays a list of tasks with integration for real-time updates.",
        "is_client": true
      },
      {
        "name": "AddTaskForm",
        "description": "Form for adding new tasks with due dates and categories.",
        "is_client": true
      },
      {
        "name": "CategoryFilter",
        "description": "Button group for filtering tasks by categories.",
        "is_client": true
      },
      {
        "name": "UserProfileMenu",
        "description": "Dropdown menu for accessing user profile and settings.",
        "is_client": true
      },
      {
        "name": "UserProfileForm",
        "description": "Form for updating user profile information.",
        "is_client": true
      },
      {
        "name": "NotificationSettings",
        "description": "UI for managing due date notifications and reminders.",
        "is_client": true
      }
    ],
    "api_routes": [
      {
        "path": "/api/auth",
        "method": "POST",
        "description": "Handles user login and registration.",
        "query": "Supabase auth methods for signup and signin."
      },
      {
        "path": "/api/todo",
        "method": "GET",
        "description": "Fetches the authenticated user's to-do list items.",
        "query": "SELECT * FROM tasks WHERE user_id = auth.uid()"
      },
      {
        "path": "/api/todo",
        "method": "POST",
        "description": "Creates a new to-do item for the authenticated user.",
        "query": "INSERT INTO tasks (title, description, due_date, category_id, user_id) VALUES ($1, $2, $3, $4, auth.uid())"
      },
      {
        "path": "/api/todo",
        "method": "PUT",
        "description": "Updates an existing to-do item for the authenticated user.",
        "query": "UPDATE tasks SET title = $1, description = $2, due_date = $3 WHERE id = $4 AND user_id = auth.uid()"
      },
      {
        "path": "/api/todo",
        "method": "DELETE",
        "description": "Deletes a to-do item for the authenticated user.",
        "query": "DELETE FROM tasks WHERE id = $1 AND user_id = auth.uid()"
      },
      {
        "path": "/api/categories",
        "method": "GET",
        "description": "Fetches all categories associated with the authenticated user.",
        "query": "SELECT * FROM categories WHERE user_id = auth.uid()"
      },
      {
        "path": "/api/user",
        "method": "GET",
        "description": "Fetches the authenticated user's profile information.",
        "query": "SELECT * FROM users WHERE id = auth.uid()"
      },
      {
        "path": "/api/user",
        "method": "PUT",
        "description": "Updates the authenticated user's profile information.",
        "query": "UPDATE users SET name = $1, email = $2 WHERE id = auth.uid()"
      }
    ],
    "database": [
      {
        "name": "users",
        "schema": "CREATE TABLE users (id uuid PRIMARY KEY, name TEXT, email TEXT UNIQUE, created_at TIMESTAMP DEFAULT NOW());"
      },
      {
        "name": "tasks",
        "schema": "CREATE TABLE tasks (id SERIAL PRIMARY KEY, title TEXT, description TEXT, due_date TIMESTAMP, completed BOOLEAN DEFAULT FALSE, category_id INT, user_id uuid REFERENCES users(id) ON DELETE CASCADE, created_at TIMESTAMP DEFAULT NOW());"
      },
      {
        "name": "categories",
        "schema": "CREATE TABLE categories (id SERIAL PRIMARY KEY, name TEXT, user_id uuid REFERENCES users(id) ON DELETE CASCADE, created_at TIMESTAMP DEFAULT NOW());"
      },
      {
        "name": "collaborations",
        "schema": "CREATE TABLE collaborations (task_id INT REFERENCES tasks(id) ON DELETE CASCADE, user_id uuid REFERENCES users(id) ON DELETE CASCADE, PRIMARY KEY (task_id, user_id));"
      }
    ]
  }
}