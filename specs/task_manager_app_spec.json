{
  "name": "Task Manager App",
  "description": "A task management application built with Next.js 14 and Supabase, allowing users to manage tasks with features like authentication, real-time updates, and categorization.",
  "features": [
    "User authentication with Supabase to secure user accounts and data",
    "CRUD operations for managing tasks: create, read, update, delete",
    "Ability to mark tasks as complete or incomplete",
    "User-specific task lists to maintain separate to-do lists for each user",
    "Due dates and reminders for tasks",
    "Category or tag system for organizing tasks",
    "Real-time updates on task status and list changes",
    "Responsive design for mobile and desktop view",
    "Data validation to ensure correct task information before saving"
  ],
  "structure": {
    "pages": [
      {
        "path": "/",
        "description": "Landing page that welcomes the user and provides options to log in or sign up.",
        "api_routes": [],
        "components": [
          "Header",
          "Footer",
          "AuthButtons"
        ]
      },
      {
        "path": "/dashboard",
        "description": "Main page where users see and manage their task lists.",
        "api_routes": [
          "/api/tasks/get",
          "/api/tasks/create",
          "/api/tasks/update",
          "/api/tasks/delete"
        ],
        "components": [
          "TaskList",
          "TaskForm",
          "CategoryFilter",
          "ReminderPopup",
          "TaskItem"
        ]
      },
      {
        "path": "/profile",
        "description": "User profile page for managing account details.",
        "api_routes": [
          "/api/user"
        ],
        "components": [
          "ProfileDetails",
          "ProfileForm",
          "ChangePasswordForm"
        ]
      }
    ],
    "components": [
      {
        "name": "Header",
        "description": "Navigation header that includes links to major sections and user profile options.",
        "is_client": true
      },
      {
        "name": "Footer",
        "description": "Footer with site info and contact details.",
        "is_client": false
      },
      {
        "name": "AuthButtons",
        "description": "Buttons for logging in or signing up, visible on landing page.",
        "is_client": true
      },
      {
        "name": "TaskList",
        "description": "Displays a list of tasks for the user.",
        "is_client": true
      },
      {
        "name": "TaskForm",
        "description": "Form for creating and editing tasks, including fields for task name, due date, and category.",
        "is_client": true
      },
      {
        "name": "CategoryFilter",
        "description": "Dropdown for selecting task categories to filter visible tasks on the dashboard.",
        "is_client": true
      },
      {
        "name": "ReminderPopup",
        "description": "Popup for setting and managing task reminders.",
        "is_client": true
      },
      {
        "name": "TaskItem",
        "description": "Displays individual task with options to mark as complete, edit, or delete.",
        "is_client": true
      },
      {
        "name": "ProfileDetails",
        "description": "Displays user profile information such as name and email.",
        "is_client": true
      },
      {
        "name": "ProfileForm",
        "description": "Form to update user profile details like name and email.",
        "is_client": true
      },
      {
        "name": "ChangePasswordForm",
        "description": "Form for changing the user's password.",
        "is_client": true
      }
    ],
    "api_routes": [
      {
        "path": "/api/auth/login",
        "method": "POST",
        "description": "Handles user login and provides authentication token.",
        "query": "supabase.auth.signIn({ email, password })"
      },
      {
        "path": "/api/auth/signup",
        "method": "POST",
        "description": "Registers a new user and creates a new session.",
        "query": "supabase.auth.signUp({ email, password })"
      },
      {
        "path": "/api/auth/logout",
        "method": "POST",
        "description": "Logs out the user by removing the session token.",
        "query": "supabase.auth.signOut()"
      },
      {
        "path": "/api/tasks/get",
        "method": "GET",
        "description": "Retrieves all tasks for the authenticated user.",
        "query": "supabase.from('tasks').select('*').eq('user_id', getUserId())"
      },
      {
        "path": "/api/tasks/create",
        "method": "POST",
        "description": "Creates a new task for the authenticated user.",
        "query": "supabase.from('tasks').insert({ user_id: getUserId(), title, due_date, category, completed: false })"
      },
      {
        "path": "/api/tasks/update",
        "method": "PUT",
        "description": "Updates an existing task owned by the authenticated user.",
        "query": "supabase.from('tasks').update({ title, due_date, category, completed }).match({ id, user_id: getUserId() })"
      },
      {
        "path": "/api/tasks/delete",
        "method": "DELETE",
        "description": "Deletes a task owned by the authenticated user.",
        "query": "supabase.from('tasks').delete().match({ id, user_id: getUserId() })"
      },
      {
        "path": "/api/user",
        "method": "GET",
        "description": "Retrieves the current user's profile data.",
        "query": "supabase.auth.user()"
      }
    ],
    "database": [
      {
        "name": "tasks",
        "schema": "CREATE TABLE tasks ( id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, user_id UUID REFERENCES users(id), title VARCHAR(255) NOT NULL, due_date TIMESTAMP, category VARCHAR(100), completed BOOLEAN DEFAULT FALSE, created_at TIMESTAMP DEFAULT NOW())"
      },
      {
        "name": "users",
        "schema": "This table is managed by Supabase authentication service, which includes columns like id, email, password hashed, etc."
      }
    ]
  }
}